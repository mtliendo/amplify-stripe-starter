type Order
	@model
	@auth(
		rules: [
			{ allow: owner }
			{ allow: groups, groups: ["drivers"], operations: [read, update] }
			{ allow: private, provider: iam, operations: [create, update] }
		]
	) {
	id: ID!
	owner: AWSEmail!
	customerDetails: CustomerDetails!
	productPriceID: String!
	orderStatus: ORDER_STATUS!
	driverLocation: DriverLocation
}

type CustomerDetails {
	name: String!
	streetName: String!
	city: String!
	state: String!
	zipCode: String!
}

enum ORDER_STATUS {
	PROCESSING
	EN_ROUTE
	DELIVERED
}

type DriverLocation {
	lng: Float!
	lat: Float!
}

# let customer subscribe to updates for their own order so the marker can update whenever the drivers location changes.

type Subscription {
	onOrderUpdateByID(orderID: ID!): Order
		@aws_subscribe(mutations: ["updateOrder"])
}
